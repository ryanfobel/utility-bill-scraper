# This workflow will install Python dependencies, run tests, lint, build the package and push to pypi (for tagged versions).
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches:
      - '**'
    tags:
      - 'v**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install python3.9-venv and firefox
      run: sudo apt-get install python3.9-venv firefox
    - name: Install poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: 1.1.0
    - name: Poetry install
      run: |
        poetry install
    - name: Generate README.md
      run: poetry run jupyter nbconvert README.ipynb --no-input --to markdown
    - name: Update TOC
      uses: technote-space/toc-generator@v4
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Check style with black
      run: |
        poetry run black . --check
    - name: Install latest gecko driver
      run: |
        pip install get-gecko-driver
        get-gecko-driver --download-latest --extract
    - name: Test with pytest
      env:
        KITCHENER_UTILITIES_USER: ${{ secrets.KITCHENER_UTILITIES_USER }}
        KITCHENER_UTILITIES_PASSWORD: ${{ secrets.KITCHENER_UTILITIES_PASSWORD }}
      run: |
        poetry run pytest --cov
    - name: Publish notebooks to html
      env:
        KITCHENER_UTILITIES_USER: ${{ secrets.KITCHENER_UTILITIES_USER }}
        KITCHENER_UTILITIES_PASSWORD: ${{ secrets.KITCHENER_UTILITIES_PASSWORD }}
        DATA_PATH: ${{ secrets.DATA_PATH }}
        GOOGLE_SA_CREDENTIALS: ${{ secrets.GOOGLE_SA_CREDENTIALS }}
      run: |
        poetry run jupyter nbconvert --to html --ouput-dir . --execute notebooks/canada/on/kitchener_utilities.ipynb
    - name: Publish to PyPi
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        USERNAME: ${{ secrets.PYPI_USERNAME }}
        PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install poetry-dynamic-versioning
        poetry-dynamic-versioning
        poetry publish --build -u $USERNAME -p $PASSWORD
